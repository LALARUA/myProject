<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.dx.Booker.generator.mapper.CommentMapper">
  <resultMap id="BaseResultMap" type="com.dx.Booker.generator.po.Comment">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="userId" jdbcType="INTEGER" property="userId" />
    <result column="bookId" jdbcType="INTEGER" property="bookId" />
    <result column="detail" jdbcType="VARCHAR" property="detail" />
    <result column="date" jdbcType="TIMESTAMP" property="date" />
  </resultMap>
  <resultMap id="commentsOfBook" type="com.dx.Booker.generator.extendPojo.commentAndSupport">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="userId" jdbcType="INTEGER" property="userId" />
    <result column="detail" jdbcType="VARCHAR" property="detail" />
    <result column="date" jdbcType="TIMESTAMP" property="date" />
    <association property="user" javaType="com.dx.Booker.generator.po.User">
      <id column="userId" jdbcType="INTEGER" property="id" />
      <result column="username" jdbcType="VARCHAR" property="username" />
      <result column="icon" jdbcType="VARCHAR" property="icon" />
    </association>
    <collection property="replies" ofType="com.dx.Booker.generator.po.reply">
    <id column="replyId" jdbcType="INTEGER" property="id"/>
    <result column="id" jdbcType="INTEGER" property="commentId"/>
    <result column="replyFromUserId" jdbcType="INTEGER" property="fromUserId"/>
    <result column="replyToUserId" jdbcType="INTEGER" property="toUserId"/>
    <result column="replyDetail" jdbcType="VARCHAR" property="detail"/>
    <result column="replyDatetime" jdbcType="TIMESTAMP" property="datetime" />
    <result column="replyFromUserName" jdbcType="VARCHAR" property="fromUserName"/>
    <result column="replyToUserName" jdbcType="VARCHAR" property="toUserName"/>
      <result column="replySupportConut" jdbcType="VARCHAR" property="toUserName"/>

    </collection>

  </resultMap>
  <select id="commentsOfBook" parameterType="java.util.HashMap" resultMap="commentsOfBook">

 SELECT
	`comment`.id AS id,
	`user`.username AS username,
	`user`.icon AS icon,
	`user`.id AS userId,
	`comment`.detail AS detail,
	`comment`.date AS date,
	reply.id AS replyId,
	reply.fromUserId AS replyFromUserId,
	reply.toUserId AS replyToUserId,
	reply.datetime AS replyDatetime,
	reply.detail AS replyDetail,
(SELECT COUNT(*) FROM replySupport  WHERE replySupport.replyId = reply.id) AS replySupportConut,
(SELECT COUNT(*) FROM replySupport  WHERE replySupport.replyId = reply.id AND replySupport.userId=#{currentUserId}) AS currentUserIsSupport,
(SELECT username FROM `user` WHERE id = reply.fromUserId) AS replyFromUserName,
(SELECT username FROM `user` WHERE id = reply.toUserId) AS replytoUserName
FROM
	`comment`
LEFT JOIN `user` ON `comment`.userId = `user`.id
LEFT JOIN reply ON `comment`.id = reply.commentId
WHERE
	`comment`.bookId = #{bookId}

--   SELECT
-- 	`comment`.id AS id,
-- 	`user`.username AS username,
-- 	`user`.icon AS icon,
-- 	`user`.id AS userId,
-- 	`comment`.detail AS detail,
-- 	`comment`.date AS date,
-- 	reply.id AS replyId,
-- 	reply.fromUserId AS replyFromUserId,
-- 	reply.toUserId AS replyToUserId,
-- 	reply.datetime AS replyDatetime,
-- 	reply.detail AS replyDetail,
-- (SELECT username FROM `user` WHERE id = reply.fromUserId) AS replyFromUserName,
-- (SELECT username FROM `user` WHERE id = reply.toUserId) AS replytoUserName
-- FROM
-- 	`comment`
-- LEFT JOIN `user` ON `comment`.userId = `user`.id
-- LEFT JOIN reply ON `comment`.id = reply.commentId
-- WHERE
-- 	`comment`.bookId = #{bookId}
  </select>
  <!--<resultMap id="commentsOfBook" type="com.dx.Booker.generator.extendPojo.commentAndSupport">-->
    <!--<id column="id" jdbcType="INTEGER" property="id" />-->
    <!--<result column="userId" jdbcType="INTEGER" property="userId" />-->
    <!--<result column="detail" jdbcType="VARCHAR" property="detail" />-->
    <!--<result column="date" jdbcType="TIMESTAMP" property="date" />-->
    <!--<association property="user" javaType="com.dx.Booker.generator.po.User">-->
      <!--<id column="userId" jdbcType="INTEGER" property="id" />-->
      <!--<result column="username" jdbcType="VARCHAR" property="username" />-->
      <!--<result column="icon" jdbcType="VARCHAR" property="icon" />-->
    <!--</association>-->
    <!--<collection property="replies" ofType="com.dx.Booker.generator.po.reply">-->
      <!--<id column="replyId" jdbcType="INTEGER" property="id"/>-->
      <!--<result column="id" jdbcType="INTEGER" property="commentId"/>-->
      <!--<result column="replyFromUserId" jdbcType="INTEGER" property="fromUserId"/>-->
      <!--<result column="replyToUserId" jdbcType="INTEGER" property="toUserId"/>-->
      <!--<result column="replyDetail" jdbcType="VARCHAR" property="detail"/>-->
      <!--<result column="replyDatetime" jdbcType="TIMESTAMP" property="datetime" />-->
      <!--<result column="replyFromUserName" jdbcType="VARCHAR" property="fromUserName"/>-->
      <!--<result column="replyToUserName" jdbcType="VARCHAR" property="toUserName"/>-->

    <!--</collection>-->
  <!--</resultMap>-->
  <!--<select id="commentsOfBook" parameterType="java.lang.Integer" resultMap="commentsOfBook">-->
<!--&#45;&#45;    select `comment`.id AS id,`user`.username AS username,`user`.icon AS icon, `user`.id AS userId,`comment`.detail AS detail,`comment`.date as-->
<!--&#45;&#45; date from `user`,`comment` WHERE `comment`.userId=`user`.id AND `comment`.bookId=#{bookId}-->
<!--SELECT-->
	<!--`comment`.id AS id,-->
	<!--`user`.username AS username,-->
	<!--`user`.icon AS icon,-->
	<!--`user`.id AS userId,-->
	<!--`comment`.detail AS detail,-->
	<!--`comment`.date AS date,-->
	<!--reply.id AS replyId,-->
	<!--reply.fromUserId AS replyFromUserId,-->
	<!--reply.toUserId AS replyToUserId,-->
	<!--reply.datetime AS replyDatetime,-->
	<!--reply.detail AS replyDetail,-->
<!--(SELECT username FROM `user` WHERE id = reply.fromUserId) AS replyFromUserName,-->
<!--(SELECT username FROM `user` WHERE id = reply.toUserId) AS replytoUserName-->
<!--FROM-->
	<!--`comment`-->
<!--LEFT JOIN `user` ON `comment`.userId = `user`.id-->
<!--LEFT JOIN reply ON `comment`.id = reply.commentId-->
<!--WHERE-->
	<!--`comment`.bookId = #{bookId}-->
  <!--</select>-->
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, userId, bookId, detail, date
  </sql>
  <select id="selectByExample" parameterType="com.dx.Booker.generator.po.CommentExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from comment
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from comment
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from comment
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.dx.Booker.generator.po.CommentExample">
    delete from comment
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.dx.Booker.generator.po.Comment">
    insert into comment (userId, bookId,
      detail, date)
    values (#{userId,jdbcType=INTEGER}, #{bookId,jdbcType=INTEGER},
      #{detail,jdbcType=VARCHAR}, #{date,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="com.dx.Booker.generator.po.Comment">
    insert into comment
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="userId != null">
        userId,
      </if>
      <if test="bookId != null">
        bookId,
      </if>
      <if test="detail != null">
        detail,
      </if>
      <if test="date != null">
        date,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="userId != null">
        #{userId,jdbcType=INTEGER},
      </if>
      <if test="bookId != null">
        #{bookId,jdbcType=INTEGER},
      </if>
      <if test="detail != null">
        #{detail,jdbcType=VARCHAR},
      </if>
      <if test="date != null">
        #{date,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.dx.Booker.generator.po.CommentExample" resultType="java.lang.Long">
    select count(*) from comment
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update comment
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.userId != null">
        userId = #{record.userId,jdbcType=INTEGER},
      </if>
      <if test="record.bookId != null">
        bookId = #{record.bookId,jdbcType=INTEGER},
      </if>
      <if test="record.detail != null">
        detail = #{record.detail,jdbcType=VARCHAR},
      </if>
      <if test="record.date != null">
        date = #{record.date,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update comment
    set id = #{record.id,jdbcType=INTEGER},
      userId = #{record.userId,jdbcType=INTEGER},
      bookId = #{record.bookId,jdbcType=INTEGER},
      detail = #{record.detail,jdbcType=VARCHAR},
      date = #{record.date,jdbcType=TIMESTAMP}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.dx.Booker.generator.po.Comment">
    update comment
    <set>
      <if test="userId != null">
        userId = #{userId,jdbcType=INTEGER},
      </if>
      <if test="bookId != null">
        bookId = #{bookId,jdbcType=INTEGER},
      </if>
      <if test="detail != null">
        detail = #{detail,jdbcType=VARCHAR},
      </if>
      <if test="date != null">
        date = #{date,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.dx.Booker.generator.po.Comment">
    update comment
    set userId = #{userId,jdbcType=INTEGER},
      bookId = #{bookId,jdbcType=INTEGER},
      detail = #{detail,jdbcType=VARCHAR},
      date = #{date,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>